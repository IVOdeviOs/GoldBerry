
import SwiftUI

struct ShopsView: View {
    
    @StateObject var viewModel: FruitViewModel
    
    var body: some View {
        VStack {
            Text("–ù–∞—à–∏ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ç–æ—á–∫–∏")
                .foregroundColor(.black)
                .font(Font(uiFont: .fontLibrary(20, .uzSansBold)))
                .padding()
            Color.theme.gray
                .opacity(0.3)
                .frame(height: 10)
            ShopsInfo(viewModel: viewModel, shopName: "–ö–æ–º–∞—Ä–æ–≤—Å–∫–∏–π —Ä—ã–Ω–æ–∫, –º–µ—Å—Ç–æ 181", shopAddress: "–≥. –ú–∏–Ω—Å–∫, —É–ª. –í. –•–æ—Ä—É–∂–µ–π, 8", workTime: "—Å 08:00 –¥–æ 20:00")
            ShopsInfo(viewModel: viewModel, shopName: "–†—ã–Ω–æ–∫ –í–∞–ª–µ—Ä–∏–∞–Ω–æ–≤–æ, –º–µ—Å—Ç–æ 14", shopAddress: "–≥. –ú–∏–Ω—Å–∫, —É–ª. –õ–æ–≥–æ–π—Å–∫–∞—è, 5–∞", workTime: "—Å 08:00 –¥–æ 21:00")
            Spacer()
        }
    }
}

struct ShopsView_Previews: PreviewProvider {
    static var previews: some View {
        ShopsView(viewModel: FruitViewModel())
    }
}

struct ShopsInfo: View {
    
    @StateObject var viewModel: FruitViewModel
    @State var shopName: String
    @State var shopAddress: String
    @State var workTime: String
    
//    @Environment(\.presentationMode) var presentationMode
//    private func dismiss() {
//        viewModel.selected = 0
//        presentationMode.wrappedValue.dismiss()
//    }
    
    
    var body: some View {
        VStack {
            HStack {
                Text(shopName)
                    .foregroundColor(.black)
                    .font(Font(uiFont: .fontLibrary(18, .uzSansBold)))
                    .padding(.leading, 10)
                    .padding(.bottom, 5)
                Spacer()
            }
            HStack {
                Text("–ê–¥—Ä–µ—Å: \(shopAddress)")
                    .foregroundColor(.black)
                    .font(Font(uiFont: .fontLibrary(15, .uzSansRegular)))
                    .padding(.leading, 10)
                    .padding(.bottom, 5)
                Spacer()
            }
            HStack {
                Text("–î–æ—Å—Ç–∞–≤–∫–∞: 0—Ä.")
                    .foregroundColor(.black)
                    .font(Font(uiFont: .fontLibrary(15, .uzSansRegular)))
                    .padding(.leading, 10)
                    .padding(.bottom, 5)
                Spacer()
            }
            HStack {
                Text("–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: \(workTime)")
                    .foregroundColor(Color.theme.gray)
                    .font(Font(uiFont: .fontLibrary(15, .uzSansRegular)))
                    .padding(.leading, 10)
                    .padding(.bottom, 5)
                Spacer()
            }
            HStack {
                Text("–†–µ–∂–∏–º –¥–æ—Å—Ç–∞–≤–∫–∏: \(workTime)")
                    .foregroundColor(Color.theme.gray)
                    .font(Font(uiFont: .fontLibrary(15, .uzSansRegular)))
                    .padding(.leading, 10)
                    .padding(.bottom, 5)
                Spacer()
            }
            Color.theme.gray
                .opacity(0.3)
                .frame(height: 1)
            
            Button {
                viewModel.selected = 0
                print("ü•≥")
            }
        label: {
            Text("–ü–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–∫–∞–∑—É —Ç–æ–≤–∞—Ä–æ–≤")
                .foregroundColor(.blue)
                .font(Font(uiFont: .fontLibrary(15, .uzSansRegular)))
                .padding()
        }
            Color.theme.gray
                .opacity(0.3)
                .frame(height: 5)
//                .navigationBarHidden(true)

        }
    }
}
